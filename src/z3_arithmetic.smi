_require "basis.smi"
_require "ffi.smi"
_require "libh.smi"

structure Z3_Arithmetic =
struct
  type Z3_context = unit ptr
  type Z3_ast     = unit ptr

  val Z3_mk_add
    : Z3_context * word * Z3_ast vector -> Z3_ast

  val Z3_mk_mul
    : Z3_context * word * Z3_ast vector -> Z3_ast

  val Z3_mk_sub
    : Z3_context * word * Z3_ast vector -> Z3_ast

  val Z3_mk_unary_minus
    : Z3_context * Z3_ast -> Z3_ast

  val Z3_mk_div
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_mod
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_rem
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_power
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_lt
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_le
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_gt
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_ge
    : Z3_context * Z3_ast * Z3_ast -> Z3_ast

  val Z3_mk_int2real
    : Z3_context * Z3_ast -> Z3_ast

  val Z3_mk_real2int
    : Z3_context * Z3_ast -> Z3_ast

  val Z3_mk_is_int
    : Z3_context * Z3_ast -> Z3_ast

end

